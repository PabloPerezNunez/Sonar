<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAABGdBTUEAALGPC/xhBQAABTRJREFUeF7t
        3cvL5nMYx/HbccZpoViIorBEwo6IsLQaiUw5JAuFnLKUlMOOsvE3jONGYSFbg0RZOUQkZzLl7HPNrWHM
        Z77zPD3XM3Pd1/f9qvdmLCx+n4f7+d2/33cWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2OOv5gFD
        bjSdAobcaDoFDLnRdAoYcqPpFDDkRtMpYMiNplPAkBtNp4AhN5pOAUNuNJ0ChtxoOgUMudF0Chhyo+kU
        MORG0ylgyI2mU8CQG02ngCE3mk4BQ240nQKG3Gg6BQy50XQKGHKj6RQw5EbTKWDIjaZTwJAbTaeAITea
        zIDS3GgzA0pzo80MKM2NNjOgNDfazIDS3GgzA0pzo80MKM2NNjOgNDfazIDS3GgzA0pzo80MKM2NNjOg
        NDfazIDS3GgzA0pzo80MKM2NNjOgNDfazIDS3GgzA0pzo80MKM2NNjOgNDfazIDS3GgzA0pzo80MKM2N
        NjOgNDfazIDS3GgzA0pzo80MKM2NNjOgNDfazIDS3GgzA0pzo80MKM2NNjOgNDfazIDS3GgzA0pzo80M
        KM2NNjOgNDfazIDS3GgzA0pzo80MKM2NNjOgNDfazIDS3GgzA0pzo80MKM2NNjOgNDfazIDS3GgzA0pz
        o80MKM2NNjMgzRHqInWrekK9oN5VH6tv1K/qT7VLfa52qh3qEbVNna7+z402M2BDTlN3qZfUD8qNbD3F
        D8sz6hq19Z8/28yAdTtGbVevqj+UG1ZGP5o/yw5YsxPUA+pL5ca0igEHdJS6X32r3IhWOWDoMvW+cuPp
        EGDFL6BPKzeaTgH7OFu9rdxgugXs5Up1MO6+VAnY4zoVX1a5oXQN2O12Fd/SupF0Dtj9X/4Zxx9hclep
        2T72/DdMLO72zPQLrwuT2qJmudU5CpOa4UuutYQJxeMNbgwzhsnEg22dn+1Zb5hMPNXphjBrmEg8z9/x
        keaNhInEyyxuBDOHScRrjJ3e5MoKk4h3eN0AZg+TiBfY3QBmDxOIo0s28/SGVQ4TiHN73MUnTCEOrXIX
        n9BeHFeYcWJb19BcnNXpLjwtQ3NxUK278LQMzcUpze7C0zI0F0eUuwtPy9BcnM/vLjwtQ3Nx3r678LQM
        zcXfzOIuPC1DczMfebKW0Bw/AOPQHB+BxqE5fgkeh+a4DToOzfFF2P57WKG5x5W7+LRYXK/Q3C3KXXxa
        LM5XaO5C5S7+7MXt4TgpA83FCzHfKzeCmXtDYRIvKjeCmXtIYRJ3KjeCmbtEYRKnKo5F+bdP1WEKE3lF
        uTHMWNwaxmRuVG4MM3auwmS2qi+UG8RMvaYwqfuUG8VMXa0wqePVzI9Hv6UwuXuUG8cMxV8OiMkdqd5T
        biCd26GA3eJLIDeSrv2kzlDAHk8pN5aO3ayAvWxRO5UbTKeeVYB1pup8dPoH6kQF7NcV6hflBrTKxe3e
        sxRwQNeqTg/L7VKXKmDNblMdfgh+VpcrYN22qVX+OBS3Oxk/NiQGtIqvUH6kzlHAhsXdoTeVG1rFXlcn
        KyDN0epJ9adyo6tQfFx7UMWL/8CmuFhVPF4x/g91ngI2XTxAd7f6WrkxHsw+U9sV7/TioDtO3asOxZtl
        8UtunG5xrAIOqXi98gb1svpducFm9JuKf0d8UcfnfJR0irpDPa++U27I6ykeYYgTreOLuZMUsDIOVxeo
        m9Sj6jn1jvpQfaXirk0UI/9ExT+LF1UeU3GIb9zH57M9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA
        PhaLvwFRi5PhdDbezQAAAABJRU5ErkJggg==
</value>
  </data>
</root>